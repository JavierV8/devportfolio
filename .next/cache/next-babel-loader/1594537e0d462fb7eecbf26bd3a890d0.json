{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nimport * as actionType from './actionTypes';\nimport Cookies from \"js-cookie\";\nexport var authStart = function authStart() {\n  return {\n    type: actionType.AUTH_START\n  };\n};\nexport var authSuccess = function authSuccess(token, userID, userName, isAdmin) {\n  return {\n    type: actionType.AUTH_SUCCESS,\n    idToken: token,\n    userID: userID,\n    userName: userName,\n    isAdmin: isAdmin\n  };\n};\nexport var authError = function authError(error) {\n  return {\n    type: actionType.AUTH_ERROR,\n    error: error\n  };\n};\nexport var logOut = function logOut() {\n  Cookies.remove('token', {\n    path: ''\n  });\n  return {\n    type: actionType.AUTH_LOGOUT\n  };\n};\nexport var auth = function auth(password, name, isSignup) {\n  return function (dispatch) {\n    dispatch(authStart());\n    var authData = null;\n    isSignup ? authData = {\n      email: email,\n      password: password,\n      name: name\n    } : authData = {\n      email: name,\n      password: password\n    };\n    var url = null;\n    isSignup ? url = 'http://localhost:4000/api/users' : url = 'http://localhost:4000/api/auth';\n    axios.post(url, authData).then(function (response) {\n      var name = response.data.name;\n      var id = response.data._id;\n      var isAdmin = response.data.isAdmin; //let token = Object.entries(response.headers)[2];\n      //token = token[1];\n\n      var token = response.headers.x_auth_token;\n      Cookies.set('token', token);\n      dispatch(authSuccess(token, id, name, isAdmin));\n    })[\"catch\"](function (error) {\n      dispatch(authError(error.response.data.error));\n    });\n  };\n};\nexport var authCheckState = function authCheckState() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var token, headers, res, userId, userName, isAdmin;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                token = Cookies.get('token');\n\n                if (!token) {\n                  _context.next = 17;\n                  break;\n                }\n\n                headers = {\n                  'Content-Type': 'application/json',\n                  'x-auth-token': token\n                };\n                _context.prev = 3;\n                _context.next = 6;\n                return axios.post('http://localhost:4000/api/auth/verifyToken', null, {\n                  headers: headers\n                });\n\n              case 6:\n                res = _context.sent;\n                userId = res.data.userId;\n                userName = res.data.user;\n                isAdmin = res.data.isAdmin;\n                dispatch(authSuccess(token, userId, userName, isAdmin));\n                _context.next = 17;\n                break;\n\n              case 13:\n                _context.prev = 13;\n                _context.t0 = _context[\"catch\"](3);\n                Cookies.remove('token', {\n                  path: ''\n                });\n                dispatch(authError(_context.t0.response.data));\n\n              case 17:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[3, 13]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var clientAuth = function clientAuth() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return dispatch(authCheckState());\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var serverAuth = function serverAuth(req) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(dispatch) {\n        var cookie, headers, res, userId, userName, isAdmin;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!req.headers.cookie) {\n                  _context3.next = 17;\n                  break;\n                }\n\n                cookie = req.headers.cookie.substr(6);\n                headers = {\n                  'Content-Type': 'application/json',\n                  'x-auth-token': cookie\n                };\n                _context3.prev = 3;\n                _context3.next = 6;\n                return axios.post('http://localhost:4000/api/auth/verifyToken', null, {\n                  headers: headers\n                });\n\n              case 6:\n                res = _context3.sent;\n                userId = res.data.userId;\n                userName = res.data.user;\n                isAdmin = res.data.isAdmin;\n                dispatch(authSuccess(cookie, userId, userName, isAdmin));\n                _context3.next = 17;\n                break;\n\n              case 13:\n                _context3.prev = 13;\n                _context3.t0 = _context3[\"catch\"](3);\n                console.log(_context3.t0.response.data);\n                dispatch(authError(_context3.t0.response.data));\n\n              case 17:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[3, 13]]);\n      }));\n\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["C:/Users/javie/OneDrive/Escritorio/repository/devportfolio/store/actions/Auth.js"],"names":["axios","actionType","Cookies","authStart","type","AUTH_START","authSuccess","token","userID","userName","isAdmin","AUTH_SUCCESS","idToken","authError","error","AUTH_ERROR","logOut","remove","path","AUTH_LOGOUT","auth","password","name","isSignup","dispatch","authData","email","url","post","then","response","data","id","_id","headers","x_auth_token","set","authCheckState","get","res","userId","user","clientAuth","serverAuth","req","cookie","substr","console","log"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport * as actionType from './actionTypes';\r\nimport Cookies from \"js-cookie\";\r\n\r\nexport const authStart = () => {\r\n  return {\r\n    type: actionType.AUTH_START\r\n  }\r\n}\r\n\r\nexport const authSuccess = (token, userID, userName, isAdmin) => {\r\n  return {\r\n    type: actionType.AUTH_SUCCESS,\r\n    idToken: token,\r\n    userID: userID,\r\n    userName: userName,\r\n    isAdmin: isAdmin\r\n  }\r\n}\r\n\r\nexport const authError = (error) => {\r\n  return {\r\n    type: actionType.AUTH_ERROR,\r\n    error: error\r\n  }\r\n}\r\n\r\nexport const logOut = () => {\r\n  Cookies.remove('token', { path: '' });\r\n  return {\r\n    type: actionType.AUTH_LOGOUT\r\n  }\r\n}\r\n\r\nexport const auth = (password, name, isSignup) => {\r\n  return dispatch => {\r\n    dispatch(authStart());\r\n    let authData = null;\r\n    isSignup ? authData = {\r\n      email: email,\r\n      password: password,\r\n      name: name\r\n    } :\r\n      authData = {\r\n        email: name,\r\n        password: password\r\n      }\r\n    let url = null;\r\n    isSignup ? url = 'http://localhost:4000/api/users' : url = 'http://localhost:4000/api/auth';\r\n    axios.post(url, authData)\r\n      .then(response => {\r\n        let name = response.data.name;\r\n        let id = response.data._id;\r\n        let isAdmin = response.data.isAdmin;\r\n        //let token = Object.entries(response.headers)[2];\r\n        //token = token[1];\r\n        const token = response.headers.x_auth_token;\r\n        Cookies.set('token', token);\r\n        dispatch(authSuccess(token, id, name, isAdmin));\r\n      })\r\n      .catch(error => {\r\n        dispatch(authError(error.response.data.error));\r\n      });\r\n  };\r\n};\r\n\r\n\r\nexport const authCheckState = () => {\r\n  return async dispatch => {\r\n    const token = Cookies.get('token');\r\n    if (token) {\r\n      const headers = {\r\n        'Content-Type': 'application/json',\r\n        'x-auth-token': token\r\n      }\r\n      try {\r\n        let res = await axios.post('http://localhost:4000/api/auth/verifyToken', null, { headers: headers });\r\n        const userId = res.data.userId;\r\n        const userName = res.data.user;\r\n        const isAdmin = res.data.isAdmin;\r\n        dispatch(authSuccess(token, userId, userName, isAdmin));\r\n      } catch (error) {\r\n        Cookies.remove('token', { path: '' });\r\n        dispatch(authError(error.response.data));\r\n      }\r\n    }\r\n  };\r\n};\r\nexport const clientAuth = () => {\r\n  return async dispatch => {\r\n    await dispatch(authCheckState());\r\n  }\r\n}\r\nexport const serverAuth = (req) => {\r\n  return async dispatch => {\r\n    if (req.headers.cookie) {\r\n      const cookie = req.headers.cookie.substr(6);\r\n      const headers = {\r\n        'Content-Type': 'application/json',\r\n        'x-auth-token': cookie\r\n      }\r\n      try {\r\n        let res = await axios.post('http://localhost:4000/api/auth/verifyToken', null, { headers: headers })\r\n        const userId = res.data.userId;\r\n        const userName = res.data.user;\r\n        const isAdmin = res.data.isAdmin;\r\n        dispatch(authSuccess(cookie, userId, userName, isAdmin));\r\n      } catch (error) {\r\n        console.log(error.response.data)\r\n        dispatch(authError(error.response.data));\r\n      }\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}