{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\nimport App, { Container } from \"next/app\";\nimport { Provider } from \"react-redux\";\nimport withRedux from \"next-redux-wrapper\"; // Stylings\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../styles/main.scss';\nimport { initStore } from \"../store/index\";\nimport * as actions from '../store/actions/index';\n\nclass MyApp extends App {\n  static async getInitialProps({\n    Component,\n    ctx\n  }) {\n    let pageProps = {};\n    let isAuth, isAdmin;\n    false ? await ctx.store.dispatch(actions.clientAuth()) : await ctx.store.dispatch(actions.serverAuth(ctx.req));\n    ctx.store.getState().auth.token != undefined ? isAuth = true : isAuth = false;\n    ctx.store.getState().auth.isAdmin != undefined ? isAdmin = true : isAdmin = false;\n    if (Component.getInitialProps) pageProps = await Component.getInitialProps(ctx);\n    const auth = {\n      isAuth,\n      isAdmin\n    };\n    return {\n      pageProps,\n      auth\n    };\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps,\n      store,\n      auth\n    } = this.props;\n    return __jsx(Container, null, __jsx(Provider, {\n      store: store\n    }, __jsx(Component, _extends({}, pageProps, {\n      auth: auth\n    }))));\n  }\n\n}\n\nexport default withRedux(initStore)(MyApp);","map":{"version":3,"sources":["C:/Users/javie/OneDrive/Escritorio/a/devportfolio/pages/_app.js"],"names":["React","App","Container","Provider","withRedux","initStore","actions","MyApp","getInitialProps","Component","ctx","pageProps","isAuth","isAdmin","store","dispatch","clientAuth","serverAuth","req","getState","auth","token","undefined","render","props"],"mappings":";;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,IAAcC,SAAd,QAA+B,UAA/B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,SAAP,MAAsB,oBAAtB,C,CACA;;AACA,OAAO,sCAAP;AACA,OAAO,qBAAP;AAEA,SAASC,SAAT,QAA0B,gBAA1B;AACA,OAAO,KAAKC,OAAZ,MAAyB,wBAAzB;;AAEA,MAAMC,KAAN,SAAoBN,GAApB,CAAwB;AACpB,eAAaO,eAAb,CAA6B;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,GAA7B,EAAiD;AAC7C,QAAIC,SAAS,GAAG,EAAhB;AACA,QAAIC,MAAJ,EAAYC,OAAZ;AACA,YACI,MAAMH,GAAG,CAACI,KAAJ,CAAUC,QAAV,CAAmBT,OAAO,CAACU,UAAR,EAAnB,CADV,GAGI,MAAMN,GAAG,CAACI,KAAJ,CAAUC,QAAV,CAAmBT,OAAO,CAACW,UAAR,CAAmBP,GAAG,CAACQ,GAAvB,CAAnB,CAHV;AAIAR,IAAAA,GAAG,CAACI,KAAJ,CAAUK,QAAV,GAAqBC,IAArB,CAA0BC,KAA1B,IAAmCC,SAAnC,GAA+CV,MAAM,GAAG,IAAxD,GAA+DA,MAAM,GAAG,KAAxE;AACAF,IAAAA,GAAG,CAACI,KAAJ,CAAUK,QAAV,GAAqBC,IAArB,CAA0BP,OAA1B,IAAqCS,SAArC,GAAiDT,OAAO,GAAG,IAA3D,GAAkEA,OAAO,GAAG,KAA5E;AACA,QAAIJ,SAAS,CAACD,eAAd,EAA+BG,SAAS,GAAG,MAAMF,SAAS,CAACD,eAAV,CAA0BE,GAA1B,CAAlB;AAC/B,UAAMU,IAAI,GAAG;AAAER,MAAAA,MAAF;AAAUC,MAAAA;AAAV,KAAb;AACA,WAAO;AAAEF,MAAAA,SAAF;AAAaS,MAAAA;AAAb,KAAP;AACH;;AAEDG,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEd,MAAAA,SAAF;AAAaE,MAAAA,SAAb;AAAwBG,MAAAA,KAAxB;AAA+BM,MAAAA;AAA/B,QAAwC,KAAKI,KAAnD;AACA,WACI,MAAC,SAAD,QACI,MAAC,QAAD;AAAU,MAAA,KAAK,EAAEV;AAAjB,OACI,MAAC,SAAD,eAAeH,SAAf;AAA0B,MAAA,IAAI,EAAES;AAAhC,OADJ,CADJ,CADJ;AAOH;;AAxBmB;;AA2BxB,eAAehB,SAAS,CAACC,SAAD,CAAT,CAAqBE,KAArB,CAAf","sourcesContent":["\r\nimport React from \"react\";\r\nimport App, { Container } from \"next/app\";\r\nimport { Provider } from \"react-redux\";\r\nimport withRedux from \"next-redux-wrapper\";\r\n// Stylings\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../styles/main.scss';\r\n\r\nimport { initStore } from \"../store/index\";\r\nimport * as actions from '../store/actions/index';\r\n\r\nclass MyApp extends App {\r\n    static async getInitialProps({ Component, ctx }) {\r\n        let pageProps = {};\r\n        let isAuth, isAdmin;\r\n        process.browser ?\r\n            await ctx.store.dispatch(actions.clientAuth())\r\n            :\r\n            await ctx.store.dispatch(actions.serverAuth(ctx.req));\r\n        ctx.store.getState().auth.token != undefined ? isAuth = true : isAuth = false;\r\n        ctx.store.getState().auth.isAdmin != undefined ? isAdmin = true : isAdmin = false;\r\n        if (Component.getInitialProps) pageProps = await Component.getInitialProps(ctx);\r\n        const auth = { isAuth, isAdmin };\r\n        return { pageProps, auth };\r\n    }\r\n\r\n    render() {\r\n        const { Component, pageProps, store, auth } = this.props;\r\n        return (\r\n            <Container>\r\n                <Provider store={store}>\r\n                    <Component {...pageProps} auth={auth} />\r\n                </Provider>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRedux(initStore)(MyApp);\r\n"]},"metadata":{},"sourceType":"module"}