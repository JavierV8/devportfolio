{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport BaseLayout from \"../components/layouts/BaseLayout\";\nimport BasePage from \"../components/shared/BasePage\";\nimport { Button } from \"reactstrap\";\nimport PortfolioCard from \"../components/portfolios/PortfolioCard\";\nimport { Router } from \"../routes\";\nimport { getPortfolios, deletePortfolio as _deletePortfolio } from \"../store/actions/Portafolio\";\n\nvar Portfolio = /*#__PURE__*/function (_React$Component) {\n  _inherits(Portfolio, _React$Component);\n\n  var _super = _createSuper(Portfolio);\n\n  function Portfolio() {\n    _classCallCheck(this, Portfolio);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Portfolio, [{\n    key: \"navigateToEdit\",\n    value: function navigateToEdit(portfolioId, e) {\n      e.stopPropagation();\n      Router.push({\n        pathname: \"/portfolioEdit\",\n        query: {\n          id: portfolioId\n        }\n      });\n    }\n  }, {\n    key: \"displayDeleteWarning\",\n    value: function displayDeleteWarning(portfolioId, e) {\n      e.stopPropagation();\n      var isConfirm = confirm(\"Are you sure you want to delete this portfolio???\");\n\n      if (isConfirm) {\n        this.deletePortfolio(portfolioId);\n      }\n    }\n  }, {\n    key: \"deletePortfolio\",\n    value: function deletePortfolio(portfolioId) {\n      _deletePortfolio(portfolioId).then(function () {\n        Router.pushRoute(\"/portfolio\");\n      })[\"catch\"](function (err) {\n        return console.error(err);\n      });\n    }\n  }, {\n    key: \"renderPortfolios\",\n    value: function renderPortfolios(portfolios) {\n      var _this = this;\n\n      var _this$props$auth = this.props.auth,\n          isAuth = _this$props$auth.isAuth,\n          isAdmin = _this$props$auth.isAdmin;\n      portfolios.sort(function (a, b) {\n        return a.num < b.num ? 1 : b.num < a.num ? -1 : 0;\n      });\n      return portfolios.map(function (portfolio, index) {\n        return __jsx(PortfolioCard, {\n          className: \"portfolio-card\",\n          portfolio: portfolio\n        }, isAuth && isAdmin ? __jsx(React.Fragment, null, __jsx(Button, {\n          onClick: function onClick(e) {\n            return _this.navigateToEdit(portfolio._id, e);\n          },\n          color: \"warning\"\n        }, \"Edit\"), \" \", __jsx(Button, {\n          onClick: function onClick(e) {\n            return _this.displayDeleteWarning(portfolio._id, e);\n          },\n          color: \"danger\"\n        }, \"Delete\")) : null);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          portfolios = _this$props.portfolios,\n          auth = _this$props.auth;\n      return __jsx(BaseLayout, {\n        auth: auth,\n        className: \"portfolio-cover\"\n      }, __jsx(BasePage, {\n        className: \"portfolio-page bounceInRight\",\n        title: \"Portfolio\"\n      }, __jsx(\"p\", {\n        className: \"portfolio-text\"\n      }, \"Feel free to see some of my code... Some concepts of software engineering that i like to share with the community:\"), __jsx(\"div\", {\n        className: \"portfolio-container\"\n      }, this.renderPortfolios(portfolios))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var portfolios;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                portfolios = [];\n                _context.prev = 1;\n                _context.next = 4;\n                return getPortfolios();\n\n              case 4:\n                portfolios = _context.sent;\n                _context.next = 10;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](1);\n                console.error(_context.t0);\n\n              case 10:\n                return _context.abrupt(\"return\", {\n                  portfolios: portfolios\n                });\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 7]]);\n      }));\n\n      function getInitialProps() {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return Portfolio;\n}(React.Component);\n\nexport default Portfolio;","map":{"version":3,"sources":["C:/Users/javie/OneDrive/Escritorio/a/devportfolio/pages/portfolio.js"],"names":["React","BaseLayout","BasePage","Button","PortfolioCard","Router","getPortfolios","deletePortfolio","Portfolio","portfolioId","e","stopPropagation","push","pathname","query","id","isConfirm","confirm","then","pushRoute","err","console","error","portfolios","props","auth","isAuth","isAdmin","sort","a","b","num","map","portfolio","index","navigateToEdit","_id","displayDeleteWarning","renderPortfolios","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport BaseLayout from \"../components/layouts/BaseLayout\";\r\nimport BasePage from \"../components/shared/BasePage\";\r\nimport { Button } from \"reactstrap\";\r\nimport PortfolioCard from \"../components/portfolios/PortfolioCard\";\r\nimport { Router } from \"../routes\";\r\nimport { getPortfolios, deletePortfolio } from \"../store/actions/Portafolio\";\r\n\r\nclass Portfolio extends React.Component {\r\n  static async getInitialProps() {\r\n    let portfolios = [];\r\n    try {\r\n      portfolios = await getPortfolios();\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n    return { portfolios };\r\n  }\r\n\r\n  navigateToEdit(portfolioId, e) {\r\n    e.stopPropagation();\r\n    Router.push({\r\n      pathname: \"/portfolioEdit\",\r\n      query: { id: portfolioId },\r\n    });\r\n  }\r\n\r\n  displayDeleteWarning(portfolioId, e) {\r\n    e.stopPropagation();\r\n    const isConfirm = confirm(\r\n      \"Are you sure you want to delete this portfolio???\"\r\n    );\r\n    if (isConfirm) {\r\n      this.deletePortfolio(portfolioId);\r\n    }\r\n  }\r\n\r\n  deletePortfolio(portfolioId) {\r\n    deletePortfolio(portfolioId)\r\n      .then(() => {\r\n        Router.pushRoute(\"/portfolio\");\r\n      })\r\n      .catch((err) => console.error(err));\r\n  }\r\n\r\n  renderPortfolios(portfolios) {\r\n    const { isAuth, isAdmin } = this.props.auth;\r\n    portfolios.sort((a, b) => (a.num < b.num ? 1 : b.num < a.num ? -1 : 0));\r\n\r\n    return portfolios.map((portfolio, index) => {\r\n      return (\r\n        <PortfolioCard className=\"portfolio-card\" portfolio={portfolio}>\r\n          {isAuth && isAdmin ? (\r\n            <React.Fragment>\r\n              <Button\r\n                onClick={(e) => this.navigateToEdit(portfolio._id, e)}\r\n                color=\"warning\"\r\n              >\r\n                Edit\r\n              </Button>{\" \"}\r\n              <Button\r\n                onClick={(e) => this.displayDeleteWarning(portfolio._id, e)}\r\n                color=\"danger\"\r\n              >\r\n                Delete\r\n              </Button>\r\n            </React.Fragment>\r\n          ) : null}\r\n        </PortfolioCard>\r\n      );\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { portfolios, auth } = this.props;\r\n\r\n    return (\r\n      <BaseLayout auth={auth} className=\"portfolio-cover\">\r\n        <BasePage className=\"portfolio-page bounceInRight\" title=\"Portfolio\">\r\n          <p className=\"portfolio-text\">\r\n            Feel free to see some of my code... Some concepts of software\r\n            engineering that i like to share with the community:\r\n          </p>\r\n          <div className=\"portfolio-container\">\r\n            {this.renderPortfolios(portfolios)}\r\n          </div>\r\n        </BasePage>\r\n      </BaseLayout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Portfolio;\r\n"]},"metadata":{},"sourceType":"module"}