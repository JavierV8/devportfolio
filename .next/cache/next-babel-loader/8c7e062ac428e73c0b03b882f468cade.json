{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nimport * as actionType from './actionType';\nimport Cookies from \"js-cookie\";\nexport var authStart = function authStart() {\n  return {\n    type: actionType.AUTH_START\n  };\n};\nexport var authSuccess = function authSuccess(token, userID, userName, isAdmin) {\n  return {\n    type: actionType.AUTH_SUCCESS,\n    idToken: token,\n    userID: userID,\n    userName: userName,\n    isAdmin: isAdmin\n  };\n};\nexport var authError = function authError(error) {\n  return {\n    type: actionType.AUTH_ERROR,\n    error: error\n  };\n};\nexport var logOut = function logOut() {\n  Cookies.remove('token', {\n    path: ''\n  });\n  return {\n    type: actionType.AUTH_LOGOUT\n  };\n}; //NEW USER----------------------------------------------------------------------------------\n\nexport var newUser = function newUser(name, email, password) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var token, _headers, authData, res, _res$data, _name, _id, isAdmin, _token;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dispatch(authStart());\n              token = Cookies.get('token');\n\n              if (token) {\n                _headers = {\n                  'Content-Type': 'application/json',\n                  'x-auth-token': token\n                };\n              }\n\n              authData = {\n                email: email,\n                password: password,\n                name: name\n              };\n              _context.prev = 4;\n              _context.next = 7;\n              return axios.post(actionType.URL + 'users', authData, {\n                headers: headers\n              });\n\n            case 7:\n              res = _context.sent;\n              _res$data = res.data, _name = _res$data.name, _id = _res$data._id, isAdmin = _res$data.isAdmin;\n              _token = res.headers.x_auth_token;\n              Cookies.set('token', _token);\n              dispatch(authSuccess(_token, _id, _name, isAdmin));\n              _context.next = 17;\n              break;\n\n            case 14:\n              _context.prev = 14;\n              _context.t0 = _context[\"catch\"](4);\n              dispatch(authError(error.response.data.error));\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[4, 14]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n}; //LOGIN------------------------------------------------------------------------------------\n\nexport var login = function login(password, name) {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      var authData, res, _res$data2, _name2, _id, isAdmin, token;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              dispatch(authStart());\n              authData = {\n                email: name,\n                password: password\n              };\n              _context2.prev = 2;\n              _context2.next = 5;\n              return axios.post(actionType.URL + 'auth', authData);\n\n            case 5:\n              res = _context2.sent;\n              _res$data2 = res.data, _name2 = _res$data2.name, _id = _res$data2._id, isAdmin = _res$data2.isAdmin;\n              token = res.headers.x_auth_token;\n              Cookies.set('token', token);\n              dispatch(authSuccess(token, _id, _name2, isAdmin));\n              _context2.next = 15;\n              break;\n\n            case 12:\n              _context2.prev = 12;\n              _context2.t0 = _context2[\"catch\"](2);\n              dispatch(authError(\"error!!!\"));\n\n            case 15:\n              ;\n\n            case 16:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[2, 12]]);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n}; //CHECK FOR TOKEN ON CLIENT SIDE----------------------------------------------------------\n\nexport var clientAuth = function clientAuth() {\n  return /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return dispatch(authCheckState());\n\n            case 2:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function (_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n};\nexport var authCheckState = function authCheckState() {\n  return /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch) {\n      var token, _headers2, res, _res$data3, userId, userName, isAdmin;\n\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              token = Cookies.get('token');\n\n              if (!token) {\n                _context4.next = 15;\n                break;\n              }\n\n              _headers2 = {\n                'Content-Type': 'application/json',\n                'x-auth-token': token\n              };\n              _context4.prev = 3;\n              _context4.next = 6;\n              return axios.post(actionType.URL + 'auth/verifyToken', null, {\n                headers: _headers2\n              });\n\n            case 6:\n              res = _context4.sent;\n              _res$data3 = res.data, userId = _res$data3.userId, userName = _res$data3.userName, isAdmin = _res$data3.isAdmin;\n              dispatch(authSuccess(token, userId, userName, isAdmin));\n              _context4.next = 15;\n              break;\n\n            case 11:\n              _context4.prev = 11;\n              _context4.t0 = _context4[\"catch\"](3);\n              Cookies.remove('token', {\n                path: ''\n              });\n              dispatch(authError(_context4.t0.response.data));\n\n            case 15:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[3, 11]]);\n    }));\n\n    return function (_x4) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n}; //CHECK FOR TOKEN ON SERVER SIDE-------------------------------------------------------------------------\n\nexport var serverAuth = function serverAuth(req) {\n  return /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(dispatch) {\n      var cookie, _headers3, res, _res$data4, userId, userName, isAdmin;\n\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              if (!req.headers.cookie) {\n                _context5.next = 15;\n                break;\n              }\n\n              cookie = req.headers.cookie.substr(6);\n              _headers3 = {\n                'Content-Type': 'application/json',\n                'x-auth-token': cookie\n              };\n              _context5.prev = 3;\n              _context5.next = 6;\n              return axios.post(actionType.URL + 'auth/verifyToken', null, {\n                headers: _headers3\n              });\n\n            case 6:\n              res = _context5.sent;\n              _res$data4 = res.data, userId = _res$data4.userId, userName = _res$data4.userName, isAdmin = _res$data4.isAdmin;\n              dispatch(authSuccess(cookie, userId, userName, isAdmin));\n              _context5.next = 15;\n              break;\n\n            case 11:\n              _context5.prev = 11;\n              _context5.t0 = _context5[\"catch\"](3);\n              console.log(_context5.t0.response.data);\n              dispatch(authError(_context5.t0.response.data));\n\n            case 15:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[3, 11]]);\n    }));\n\n    return function (_x5) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["C:/Users/javie/OneDrive/Escritorio/a/devportfolio/store/actions/auth.js"],"names":["axios","actionType","Cookies","authStart","type","AUTH_START","authSuccess","token","userID","userName","isAdmin","AUTH_SUCCESS","idToken","authError","error","AUTH_ERROR","logOut","remove","path","AUTH_LOGOUT","newUser","name","email","password","dispatch","get","headers","authData","post","URL","res","data","_id","x_auth_token","set","response","login","clientAuth","authCheckState","userId","serverAuth","req","cookie","substr","console","log"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport * as actionType from './actionType';\r\nimport Cookies from \"js-cookie\";\r\n\r\nexport const authStart = () => {\r\n  return {\r\n    type: actionType.AUTH_START\r\n  }\r\n}\r\n\r\nexport const authSuccess = (token, userID, userName, isAdmin) => {\r\n  return {\r\n    type: actionType.AUTH_SUCCESS,\r\n    idToken: token,\r\n    userID: userID,\r\n    userName: userName,\r\n    isAdmin: isAdmin\r\n  }\r\n}\r\n\r\nexport const authError = (error) => {\r\n  return {\r\n    type: actionType.AUTH_ERROR,\r\n    error: error\r\n  }\r\n}\r\n\r\nexport const logOut = () => {\r\n  Cookies.remove('token', { path: '' });\r\n  return {\r\n    type: actionType.AUTH_LOGOUT\r\n  }\r\n}\r\n\r\n//NEW USER----------------------------------------------------------------------------------\r\nexport const newUser = (name, email, password) => {\r\n  return async dispatch => {\r\n    dispatch(authStart());\r\n    const token = Cookies.get('token');\r\n    if (token) {\r\n      const headers = {\r\n        'Content-Type': 'application/json',\r\n        'x-auth-token': token\r\n      }\r\n    }\r\n    const authData = {\r\n      email: email,\r\n      password: password,\r\n      name: name\r\n    };\r\n    try {\r\n      let res = await axios.post(actionType.URL + 'users', authData, { headers: headers });\r\n      const { name, _id, isAdmin } = res.data;\r\n      const token = res.headers.x_auth_token;\r\n      Cookies.set('token', token);\r\n      dispatch(authSuccess(token, _id, name, isAdmin));\r\n    }\r\n    catch {\r\n      dispatch(authError(error.response.data.error));\r\n    }\r\n  }\r\n};\r\n\r\n//LOGIN------------------------------------------------------------------------------------\r\nexport const login = (password, name) => {\r\n  return async dispatch => {\r\n    dispatch(authStart());\r\n    const authData = {\r\n      email: name,\r\n      password: password\r\n    }\r\n    try {\r\n      let res = await axios.post(actionType.URL + 'auth', authData);\r\n      const { name, _id, isAdmin } = res.data;\r\n      const token = res.headers.x_auth_token;\r\n      Cookies.set('token', token);\r\n      dispatch(authSuccess(token, _id, name, isAdmin));\r\n    }\r\n    catch {\r\n      dispatch(authError(\"error!!!\"));\r\n    };\r\n  };\r\n};\r\n\r\n\r\n//CHECK FOR TOKEN ON CLIENT SIDE----------------------------------------------------------\r\nexport const clientAuth = () => {\r\n  return async dispatch => {\r\n    await dispatch(authCheckState());\r\n  }\r\n}\r\n\r\nexport const authCheckState = () => {\r\n  return async dispatch => {\r\n    const token = Cookies.get('token');\r\n    if (token) {\r\n      const headers = {\r\n        'Content-Type': 'application/json',\r\n        'x-auth-token': token\r\n      }\r\n      try {\r\n        let res = await axios.post(actionType.URL + 'auth/verifyToken', null, { headers: headers });\r\n        const { userId, userName, isAdmin } = res.data;\r\n        dispatch(authSuccess(token, userId, userName, isAdmin));\r\n      } catch (error) {\r\n        Cookies.remove('token', { path: '' });\r\n        dispatch(authError(error.response.data));\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\n//CHECK FOR TOKEN ON SERVER SIDE-------------------------------------------------------------------------\r\nexport const serverAuth = (req) => {\r\n  return async dispatch => {\r\n    if (req.headers.cookie) {\r\n      const cookie = req.headers.cookie.substr(6);\r\n      const headers = {\r\n        'Content-Type': 'application/json',\r\n        'x-auth-token': cookie\r\n      }\r\n      try {\r\n        let res = await axios.post(actionType.URL + 'auth/verifyToken', null, { headers: headers })\r\n        const { userId, userName, isAdmin } = res.data;\r\n        dispatch(authSuccess(cookie, userId, userName, isAdmin));\r\n      } catch (error) {\r\n        console.log(error.response.data)\r\n        dispatch(authError(error.response.data));\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}