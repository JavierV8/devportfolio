{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../store/actions/index';\nimport Router from 'next/router';\nimport ActiveLink from '../ActiveLink';\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem } from 'reactstrap';\n\nvar BsNavLink = function BsNavLink(props) {\n  var route = props.route,\n      title = props.title;\n  var className = props.className || \"\";\n  return __jsx(ActiveLink, {\n    activeClassName: \"active\",\n    href: route,\n    route: route\n  }, __jsx(\"a\", {\n    className: \"nav-link port-navbar-link \".concat(className)\n  }, \" \", title, \" \"));\n};\n\n_c = BsNavLink;\n\nvar Header = /*#__PURE__*/function (_Component) {\n  _inherits(Header, _Component);\n\n  var _super = _createSuper(Header);\n\n  function Header() {\n    var _this;\n\n    _classCallCheck(this, Header);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isOpen: false,\n      setIsOpen: false\n    });\n\n    return _this;\n  }\n\n  _createClass(Header, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          auth = _this$props.auth,\n          className = _this$props.className;\n      var authButton;\n\n      var toggle = function toggle() {\n        return _this2.setState({\n          isOpen: !_this2.state.isOpen\n        });\n      };\n\n      auth.isAuth ? authButton = \"LogOut\" : authButton = \"LogIn\";\n\n      var logOut = function logOut() {\n        if (auth.isAuth) {\n          _this2.props.onlogOut();\n\n          Router.push('/index');\n        }\n      };\n\n      return __jsx(\"div\", null, __jsx(Navbar, {\n        className: \"port-navbar port-nav-base absolute \".concat(className),\n        color: \"transparent\",\n        dark: true,\n        expand: \"md\"\n      }, __jsx(NavbarBrand, {\n        className: \"port-navbar-brand home\",\n        href: \"/\"\n      }, \"Javier Sanchez\"), __jsx(NavbarToggler, {\n        onClick: toggle\n      }), __jsx(Collapse, {\n        isOpen: this.state.isOpen,\n        navbar: true\n      }, __jsx(Nav, {\n        className: \"ml-auto\",\n        navbar: true\n      }, __jsx(NavItem, {\n        className: \"port-vabar-item\"\n      }, __jsx(BsNavLink, {\n        route: \"/about\",\n        title: \"About\"\n      })), __jsx(NavItem, {\n        className: \"port-vabar-item\"\n      }, __jsx(BsNavLink, {\n        route: \"/skills\",\n        title: \"Skills\"\n      })), __jsx(NavItem, {\n        className: \"port-vabar-item\"\n      }, __jsx(BsNavLink, {\n        route: \"/portfolio\",\n        title: \"Portfolio\"\n      })), __jsx(NavItem, {\n        className: \"port-vabar-item\"\n      }, __jsx(BsNavLink, {\n        route: \"/contact\",\n        title: \"Contact\"\n      })), auth.isAuth ? __jsx(NavItem, {\n        className: \"port-vabar-item\",\n        onClick: logOut\n      }, __jsx(BsNavLink, {\n        route: \"/login\",\n        title: authButton\n      })) : null))));\n    }\n  }]);\n\n  return Header;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onAuth: function onAuth() {\n      return dispatch(actions.authCheckState());\n    },\n    onlogOut: function onlogOut() {\n      return dispatch(actions.logOut());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n\nvar _c;\n\n$RefreshReg$(_c, \"BsNavLink\");","map":{"version":3,"sources":["C:/Users/javie/OneDrive/Escritorio/a/devportfolio/components/shared/Header.js"],"names":["React","Component","connect","actions","Router","ActiveLink","Collapse","Navbar","NavbarToggler","NavbarBrand","Nav","NavItem","BsNavLink","props","route","title","className","Header","isOpen","setIsOpen","auth","authButton","toggle","setState","state","isAuth","logOut","onlogOut","push","mapStateToProps","isAuthenticated","token","mapDispatchToProps","dispatch","onAuth","authCheckState"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../store/actions/index';\r\nimport Router from 'next/router';\r\nimport ActiveLink from '../ActiveLink';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n} from 'reactstrap';\r\n\r\n\r\nconst BsNavLink = props => {\r\n  const { route, title } = props;\r\n  const className = props.className || \"\";\r\n  return (\r\n    <ActiveLink activeClassName=\"active\" href={route} route={route}>\r\n      <a className={`nav-link port-navbar-link ${className}`}> {title} </a>\r\n    </ActiveLink>\r\n  )\r\n}\r\n\r\n\r\nclass Header extends Component {\r\n  state = {\r\n    isOpen: false,\r\n    setIsOpen: false,\r\n  }\r\n\r\n  render() {\r\n    const { auth, className } = this.props;\r\n    let authButton;\r\n    const toggle = () => this.setState({ isOpen: !this.state.isOpen });\r\n    auth.isAuth ? authButton = \"LogOut\" : authButton = \"LogIn\";\r\n    const logOut = () => {\r\n      if (auth.isAuth) {\r\n        this.props.onlogOut();\r\n        Router.push('/index');\r\n      }\r\n    }\r\n    return (\r\n      <div>\r\n        <Navbar className={`port-navbar port-nav-base absolute ${className}`} color=\"transparent\" dark expand=\"md\">\r\n          <NavbarBrand className=\"port-navbar-brand home\" href=\"/\">Javier Sanchez</NavbarBrand>\r\n          <NavbarToggler onClick={toggle} />\r\n          <Collapse isOpen={this.state.isOpen} navbar>\r\n            <Nav className=\"ml-auto\" navbar>\r\n              <NavItem className=\"port-vabar-item\">\r\n                <BsNavLink route=\"/about\" title=\"About\" />\r\n              </NavItem>\r\n              <NavItem className=\"port-vabar-item\">\r\n                <BsNavLink route=\"/skills\" title=\"Skills\" />\r\n              </NavItem>\r\n              <NavItem className=\"port-vabar-item\">\r\n                <BsNavLink route=\"/portfolio\" title=\"Portfolio\" />\r\n              </NavItem>\r\n              <NavItem className=\"port-vabar-item\">\r\n                <BsNavLink route=\"/contact\" title=\"Contact\" />\r\n              </NavItem>\r\n              {auth.isAuth ?\r\n                <NavItem className=\"port-vabar-item\" onClick={logOut}>\r\n                  <BsNavLink route=\"/login\" title={authButton} />\r\n                </NavItem>\r\n                :\r\n                null\r\n              }\r\n            </Nav>\r\n          </Collapse>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isAuthenticated: state.auth.token !== null,\r\n  }\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onAuth: () => dispatch(actions.authCheckState()),\r\n    onlogOut: () => dispatch(actions.logOut())\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);"]},"metadata":{},"sourceType":"module"}