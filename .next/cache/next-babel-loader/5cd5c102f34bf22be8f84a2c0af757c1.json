{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../store/actions/index';\nimport Router from 'next/router';\nimport ActiveLink from '../ActiveLink';\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem } from 'reactstrap';\n\nconst BsNavLink = props => {\n  const {\n    route,\n    title\n  } = props;\n  const className = props.className || \"\";\n  return __jsx(ActiveLink, {\n    activeClassName: \"active\",\n    href: route,\n    route: route\n  }, __jsx(\"a\", {\n    className: `nav-link port-navbar-link ${className}`\n  }, \" \", title, \" \"));\n};\n\nclass Header extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      isOpen: false,\n      setIsOpen: false\n    });\n  }\n\n  render() {\n    const {\n      auth,\n      className\n    } = this.props;\n    let authButton;\n\n    const toggle = () => this.setState({\n      isOpen: !this.state.isOpen\n    });\n\n    auth.isAuth ? authButton = \"LogOut\" : authButton = \"LogIn\";\n\n    const logOut = () => {\n      if (auth.isAuth) {\n        this.props.onlogOut();\n        Router.push('/index');\n      }\n    };\n\n    return __jsx(\"div\", null, __jsx(Navbar, {\n      className: `port-navbar port-nav-base absolute ${className}`,\n      color: \"transparent\",\n      dark: true,\n      expand: \"md\"\n    }, __jsx(NavbarBrand, {\n      className: \"port-navbar-brand home\",\n      href: \"/\"\n    }, \"Javier Sanchez\"), __jsx(NavbarToggler, {\n      onClick: toggle\n    }), __jsx(Collapse, {\n      isOpen: this.state.isOpen,\n      navbar: true\n    }, __jsx(Nav, {\n      className: \"ml-auto\",\n      navbar: true\n    }, __jsx(NavItem, {\n      className: \"port-vabar-item\"\n    }, __jsx(BsNavLink, {\n      route: \"/about\",\n      title: \"About\"\n    })), __jsx(NavItem, {\n      className: \"port-vabar-item\"\n    }, __jsx(BsNavLink, {\n      route: \"/skills\",\n      title: \"Skills\"\n    })), __jsx(NavItem, {\n      className: \"port-vabar-item\"\n    }, __jsx(BsNavLink, {\n      route: \"/portfolio\",\n      title: \"Portfolio\"\n    })), __jsx(NavItem, {\n      className: \"port-vabar-item\"\n    }, __jsx(BsNavLink, {\n      route: \"/contact\",\n      title: \"Contact\"\n    })), auth.isAuth ? __jsx(NavItem, {\n      className: \"port-vabar-item\",\n      onClick: logOut\n    }, __jsx(BsNavLink, {\n      route: \"/login\",\n      title: authButton\n    })) : null))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: () => dispatch(actions.authCheckState()),\n    onlogOut: () => dispatch(actions.logOut())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","map":{"version":3,"sources":["C:/Users/javie/OneDrive/Escritorio/a/devportfolio/components/shared/Header.js"],"names":["React","Component","connect","actions","Router","ActiveLink","Collapse","Navbar","NavbarToggler","NavbarBrand","Nav","NavItem","BsNavLink","props","route","title","className","Header","isOpen","setIsOpen","render","auth","authButton","toggle","setState","state","isAuth","logOut","onlogOut","push","mapStateToProps","isAuthenticated","token","mapDispatchToProps","dispatch","onAuth","authCheckState"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,2BAAzB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,SACEC,QADF,EAEEC,MAFF,EAGEC,aAHF,EAIEC,WAJF,EAKEC,GALF,EAMEC,OANF,QAOO,YAPP;;AAUA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AACzB,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAmBF,KAAzB;AACA,QAAMG,SAAS,GAAGH,KAAK,CAACG,SAAN,IAAmB,EAArC;AACA,SACE,MAAC,UAAD;AAAY,IAAA,eAAe,EAAC,QAA5B;AAAqC,IAAA,IAAI,EAAEF,KAA3C;AAAkD,IAAA,KAAK,EAAEA;AAAzD,KACE;AAAG,IAAA,SAAS,EAAG,6BAA4BE,SAAU;AAArD,UAA0DD,KAA1D,MADF,CADF;AAKD,CARD;;AAWA,MAAME,MAAN,SAAqBhB,SAArB,CAA+B;AAAA;AAAA;;AAAA,mCACrB;AACNiB,MAAAA,MAAM,EAAE,KADF;AAENC,MAAAA,SAAS,EAAE;AAFL,KADqB;AAAA;;AAM7BC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,IAAF;AAAQL,MAAAA;AAAR,QAAsB,KAAKH,KAAjC;AACA,QAAIS,UAAJ;;AACA,UAAMC,MAAM,GAAG,MAAM,KAAKC,QAAL,CAAc;AAAEN,MAAAA,MAAM,EAAE,CAAC,KAAKO,KAAL,CAAWP;AAAtB,KAAd,CAArB;;AACAG,IAAAA,IAAI,CAACK,MAAL,GAAcJ,UAAU,GAAG,QAA3B,GAAsCA,UAAU,GAAG,OAAnD;;AACA,UAAMK,MAAM,GAAG,MAAM;AACnB,UAAIN,IAAI,CAACK,MAAT,EAAiB;AACf,aAAKb,KAAL,CAAWe,QAAX;AACAxB,QAAAA,MAAM,CAACyB,IAAP,CAAY,QAAZ;AACD;AACF,KALD;;AAMA,WACE,mBACE,MAAC,MAAD;AAAQ,MAAA,SAAS,EAAG,sCAAqCb,SAAU,EAAnE;AAAsE,MAAA,KAAK,EAAC,aAA5E;AAA0F,MAAA,IAAI,MAA9F;AAA+F,MAAA,MAAM,EAAC;AAAtG,OACE,MAAC,WAAD;AAAa,MAAA,SAAS,EAAC,wBAAvB;AAAgD,MAAA,IAAI,EAAC;AAArD,wBADF,EAEE,MAAC,aAAD;AAAe,MAAA,OAAO,EAAEO;AAAxB,MAFF,EAGE,MAAC,QAAD;AAAU,MAAA,MAAM,EAAE,KAAKE,KAAL,CAAWP,MAA7B;AAAqC,MAAA,MAAM;AAA3C,OACE,MAAC,GAAD;AAAK,MAAA,SAAS,EAAC,SAAf;AAAyB,MAAA,MAAM;AAA/B,OACE,MAAC,OAAD;AAAS,MAAA,SAAS,EAAC;AAAnB,OACE,MAAC,SAAD;AAAW,MAAA,KAAK,EAAC,QAAjB;AAA0B,MAAA,KAAK,EAAC;AAAhC,MADF,CADF,EAIE,MAAC,OAAD;AAAS,MAAA,SAAS,EAAC;AAAnB,OACE,MAAC,SAAD;AAAW,MAAA,KAAK,EAAC,SAAjB;AAA2B,MAAA,KAAK,EAAC;AAAjC,MADF,CAJF,EAOE,MAAC,OAAD;AAAS,MAAA,SAAS,EAAC;AAAnB,OACE,MAAC,SAAD;AAAW,MAAA,KAAK,EAAC,YAAjB;AAA8B,MAAA,KAAK,EAAC;AAApC,MADF,CAPF,EAUE,MAAC,OAAD;AAAS,MAAA,SAAS,EAAC;AAAnB,OACE,MAAC,SAAD;AAAW,MAAA,KAAK,EAAC,UAAjB;AAA4B,MAAA,KAAK,EAAC;AAAlC,MADF,CAVF,EAaGG,IAAI,CAACK,MAAL,GACC,MAAC,OAAD;AAAS,MAAA,SAAS,EAAC,iBAAnB;AAAqC,MAAA,OAAO,EAAEC;AAA9C,OACE,MAAC,SAAD;AAAW,MAAA,KAAK,EAAC,QAAjB;AAA0B,MAAA,KAAK,EAAEL;AAAjC,MADF,CADD,GAKC,IAlBJ,CADF,CAHF,CADF,CADF;AA+BD;;AAhD4B;;AAkD/B,MAAMQ,eAAe,GAAGL,KAAK,IAAI;AAC/B,SAAO;AACLM,IAAAA,eAAe,EAAEN,KAAK,CAACJ,IAAN,CAAWW,KAAX,KAAqB;AADjC,GAAP;AAGD,CAJD;;AAKA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLC,IAAAA,MAAM,EAAE,MAAMD,QAAQ,CAAC/B,OAAO,CAACiC,cAAR,EAAD,CADjB;AAELR,IAAAA,QAAQ,EAAE,MAAMM,QAAQ,CAAC/B,OAAO,CAACwB,MAAR,EAAD;AAFnB,GAAP;AAID,CALD;;AAMA,eAAezB,OAAO,CAAC4B,eAAD,EAAkBG,kBAAlB,CAAP,CAA6ChB,MAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../store/actions/index';\r\nimport Router from 'next/router';\r\nimport ActiveLink from '../ActiveLink';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n} from 'reactstrap';\r\n\r\n\r\nconst BsNavLink = props => {\r\n  const { route, title } = props;\r\n  const className = props.className || \"\";\r\n  return (\r\n    <ActiveLink activeClassName=\"active\" href={route} route={route}>\r\n      <a className={`nav-link port-navbar-link ${className}`}> {title} </a>\r\n    </ActiveLink>\r\n  )\r\n}\r\n\r\n\r\nclass Header extends Component {\r\n  state = {\r\n    isOpen: false,\r\n    setIsOpen: false,\r\n  }\r\n\r\n  render() {\r\n    const { auth, className } = this.props;\r\n    let authButton;\r\n    const toggle = () => this.setState({ isOpen: !this.state.isOpen });\r\n    auth.isAuth ? authButton = \"LogOut\" : authButton = \"LogIn\";\r\n    const logOut = () => {\r\n      if (auth.isAuth) {\r\n        this.props.onlogOut();\r\n        Router.push('/index');\r\n      }\r\n    }\r\n    return (\r\n      <div>\r\n        <Navbar className={`port-navbar port-nav-base absolute ${className}`} color=\"transparent\" dark expand=\"md\">\r\n          <NavbarBrand className=\"port-navbar-brand home\" href=\"/\">Javier Sanchez</NavbarBrand>\r\n          <NavbarToggler onClick={toggle} />\r\n          <Collapse isOpen={this.state.isOpen} navbar>\r\n            <Nav className=\"ml-auto\" navbar>\r\n              <NavItem className=\"port-vabar-item\">\r\n                <BsNavLink route=\"/about\" title=\"About\" />\r\n              </NavItem>\r\n              <NavItem className=\"port-vabar-item\">\r\n                <BsNavLink route=\"/skills\" title=\"Skills\" />\r\n              </NavItem>\r\n              <NavItem className=\"port-vabar-item\">\r\n                <BsNavLink route=\"/portfolio\" title=\"Portfolio\" />\r\n              </NavItem>\r\n              <NavItem className=\"port-vabar-item\">\r\n                <BsNavLink route=\"/contact\" title=\"Contact\" />\r\n              </NavItem>\r\n              {auth.isAuth ?\r\n                <NavItem className=\"port-vabar-item\" onClick={logOut}>\r\n                  <BsNavLink route=\"/login\" title={authButton} />\r\n                </NavItem>\r\n                :\r\n                null\r\n              }\r\n            </Nav>\r\n          </Collapse>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isAuthenticated: state.auth.token !== null,\r\n  }\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onAuth: () => dispatch(actions.authCheckState()),\r\n    onlogOut: () => dispatch(actions.logOut())\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);"]},"metadata":{},"sourceType":"module"}