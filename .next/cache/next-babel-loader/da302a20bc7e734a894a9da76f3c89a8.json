{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { Children } from 'react';\nimport Link from 'next/link';\nimport { withRouter } from 'next/router';\n\nconst ActiveLink = (_ref) => {\n  let {\n    children,\n    router\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"children\", \"router\"]);\n\n  const child = Children.only(children);\n  let className = child.props.className || \"\";\n\n  if (router.asPath === props.route && props.activeClassName) {\n    className = `${className} ${props.activeClassName}`;\n  }\n\n  delete props.activeClassName;\n  return __jsx(Link, props, React.cloneElement(child, {\n    className\n  }));\n};\n\nexport default withRouter(ActiveLink);","map":{"version":3,"sources":["C:/Users/javie/OneDrive/Escritorio/a/devportfolio/components/ActiveLink.js"],"names":["React","Children","Link","withRouter","ActiveLink","children","router","props","child","only","className","asPath","route","activeClassName","cloneElement"],"mappings":";;;;;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,UAAT,QAA2B,aAA3B;;AAEA,MAAMC,UAAU,GAAG,UAAoC;AAAA,MAAnC;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAAmC;AAAA,MAAZC,KAAY;;AACrD,QAAMC,KAAK,GAAGP,QAAQ,CAACQ,IAAT,CAAcJ,QAAd,CAAd;AACA,MAAIK,SAAS,GAAGF,KAAK,CAACD,KAAN,CAAYG,SAAZ,IAAyB,EAAzC;;AACA,MAAIJ,MAAM,CAACK,MAAP,KAAkBJ,KAAK,CAACK,KAAxB,IAAiCL,KAAK,CAACM,eAA3C,EAA4D;AAC1DH,IAAAA,SAAS,GAAI,GAAEA,SAAU,IAAGH,KAAK,CAACM,eAAgB,EAAlD;AACD;;AACD,SAAON,KAAK,CAACM,eAAb;AACA,SAAO,MAAC,IAAD,EAAUN,KAAV,EAAkBP,KAAK,CAACc,YAAN,CAAmBN,KAAnB,EAA0B;AAAEE,IAAAA;AAAF,GAA1B,CAAlB,CAAP;AACD,CARD;;AAUA,eAAeP,UAAU,CAACC,UAAD,CAAzB","sourcesContent":["\r\nimport React, { Children } from 'react';\r\nimport Link from 'next/link'\r\nimport { withRouter } from 'next/router';\r\n\r\nconst ActiveLink = ({ children, router, ...props }) => {\r\n  const child = Children.only(children);\r\n  let className = child.props.className || \"\";\r\n  if (router.asPath === props.route && props.activeClassName) {\r\n    className = `${className} ${props.activeClassName}`\r\n  }\r\n  delete props.activeClassName;\r\n  return <Link {...props}>{React.cloneElement(child, { className })}</Link>;\r\n}\r\n\r\nexport default withRouter(ActiveLink);\r\n\r\n"]},"metadata":{},"sourceType":"module"}